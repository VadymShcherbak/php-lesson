<h1>Задачи на математические функции PHP</h1>

<h3>1.Даны переменные $a=10 и $b=3. Найдите остаток от деления $a на $b.</h3>

<?php
function va_todo_1() {
	$a = 10;
	$b = 3;

	echo $a % $b;
}

va_todo_1();
?>

<h3>2.Даны переменные $a и $b. Проверьте, что $a делится без остатка на $b. Если это так - выведите 'Делится' и результат деления, иначе выведите 'Делится с остатком' и остаток от деления.</h3>

<?php
function va_todo_2() {
	$a = 10;
	$b = 3;
	$c = $a % $b;

	if ( 0 === $c ) {
		echo 'Делится' . ( $a / $b );
	} else {
		echo 'Делится с остатком' . ' ' . $c;
	}
}

va_todo_2();
?>

<h3>3.Возведите 2 в 10 степень. Результат запишите в переменную $st.</h3>

<?php
function va_todo_3() {
	$st = pow( 2, 10 );

	echo $st;
}

va_todo_3();
?>

<h3>4.Найдите квадратный корень из 245.</h3>

<?php
function va_todo_4() {
	$sqrt = sqrt( 245 );

	echo $sqrt;
}

va_todo_4();
?>

<h3>5.Дан массив с элементами 4, 2, 5, 19, 13, 0, 10. Найдите корень из суммы квадратов его элементов. Для решения воспользуйтесь циклом foreach.</h3>

<?php
function va_todo_5() {
	$arr = array( 4, 2, 5, 19, 13, 0, 10 );

	foreach ( $arr as $elem ) {
		$result += pow( $elem, 2 );
	}

	echo sqrt( $result );
}

va_todo_5();
?>

<h3>6.Найдите квадратный корень из 379. Результат округлите до целых, до десятых, до сотых.</h3>

<?php
function va_todo_6() {
	$sqrt = sqrt( 379 );

	echo round( $sqrt ) . '<br>';
	echo round( $sqrt, 1 ) . '<br>';
	echo round( $sqrt, 2 ) . '<br>';
}

va_todo_6();
?>

<h3>7.Найдите квадратный корень из 587. Округлите результат в большую и меньшую сторону, запишите результаты округления в ассоциативный массив с ключами 'floor' и 'ceil'.</h3>

<?php
function va_todo_7() {
	$sqrt = sqrt( 587 );
	$arr  = array();

	$arr['ceil']  = ceil( $sqrt );
	$arr['floor'] = floor( $sqrt );

	echo $arr['ceil'] . '<br>';
	echo $arr['floor'] . '<br>';

}

va_todo_7();
?>

<h3>8.Даны числа 4, -2, 5, 19, -130, 0, 10. Найдите минимальное и максимальное число.</h3>

<?php
function va_todo_8() {

	echo min( 4, -2, 5, 19, -130, 0, 10 ) . '<br>';
	echo max( 4, -2, 5, 19, -130, 0, 10 ) . '<br>';
}

va_todo_8();
?>

<h3>9.Выведите на экран случайное число от 1 до 100.</h3>

<?php
function va_todo_9() {

	echo mt_rand( 1, 100 );
}

va_todo_9();
?>

<h3>10.Заполните массив 10-ю случайными числами.</h3>

<?php
function va_todo_10() {
	$arr = array();

	for ( $i = 1; $i <= 10; $i++ ) {
		$arr[] = mt_rand( 1, 100 );
	}

	var_dump( $arr );
}

va_todo_10();
?>

<h3>11.Даны переменные $a и $b. Найдите найдите модуль разности $a и $b. Проверьте работу скрипта самостоятельно для различных $a и $b.</h3>

<?php
function va_todo_11( $a, $b ) {
	echo abs( $a - $b );
}

va_todo_11( 4, 10 );
?>

<h3>12.Дан массив в числами, к примеру [1, 2, -1, -2, 3, -3]. Создайте из него новый массив так, чтобы отрицательные числа стали положительными, то есть у нас должен получиться такой массив: [1, 2, 1, 2, 3, 3].</h3>

<?php
function va_todo_12() {
	$arr  = array( 1, 2, -1, -2, 3, -3 );
	$arr2 = array();

	foreach ( $arr as $elem ) {
		$arr2[] = abs( $elem );
	}

	var_dump( $arr2 );
}

va_todo_12();
?>

<h3>13.Дано число, например 30. У этого числа есть делители - числа, на которое оно делится без остатка. Делители числа 30 - это 1, 2, 3, 5, 6, 10, 15, 30. Задача: сделайте массив делителей нашего числа. Число может быть любым, не обязательно, 30.</h3>

<?php
function va_todo_13( $a ) {
	$arr = array();

	for ( $i = 1; $i < $a; $i++ ) {
		if ( 0 === ( $a % $i ) ) {
			$arr[] = $i;
		}
	}

	var_dump( $arr );
}

va_todo_13( 52 );
?>

<h3>14. Дан массив [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]. Узнайте, сколько первых элементов массива нужно сложить, чтобы сумма получилась больше 10.</h3>

<?php
function va_todo_14() {
	$arr    = array( 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 );
	$result = 0;

	for ( $i = 0; $i < count( $arr ); $i++ ) {
		if ( $result > 10 ) {
			echo $i;
			break;
		} else {
			$result += $arr[ $i ];
		}
	}
}

va_todo_14();
?>
